/*!
 * Copyright (c) 2018 BlackBerry.  All Rights Reserved.
 * 
 * You must obtain a license from and pay any applicable license fees to
 * BlackBerry before you may reproduce, modify or distribute this software, or
 * any work that includes all or part of this software.
 * 
 * The BBM Enterprise SDK includes third party code.  For third party licenses
 * see: THIRDPARTY_LICENSES.txt.
 * 
 */
/*! v1.2.0-rc16 */
module.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=73)}({1:function(e,t,r){"use strict";function n(e){this.name="BBMEnterprise.Error.Error",this.message=e||"An error has occurred",this.stack=(new Error).stack}function o(e){this.name="BBMEnterprise.Error.NotFoundError",this.message=e||"The requested data was not found",this.stack=(new Error).stack}function s(e){this.name="BBMEnterprise.Error.DuplicateError",this.message=e||"Duplicate error",this.stack=(new Error).stack}function c(e){this.name="BBMEnterprise.Error.PermanentFailure",this.message="PermanentFailure. The request must not be retried"+(e?": "+e:""),this.stack=(new Error).stack}function i(e){this.name="BBMEnterprise.Error.TemporaryFailure",this.message="TemporaryFailure. The request may be retried later"+(e?": "+e:""),this.stack=(new Error).stack}function a(e){this.name="BBMEnterprise.Error.Forbidden",this.message="Forbidden. The request must not be retried"+(e?": "+e:""),this.stack=(new Error).stack}function p(e){this.name="BBMEnterprise.Error.NotFound",this.message="NotFound. The request must not be retried"+(e?": "+e:""),this.stack=(new Error).stack}function u(e){this.name="BBMEnterprise.Error.BrowserNotSupportedError",this.message=e||"The browser is not supported",this.stack=(new Error).stack}function y(e){this.name="BBMEnterprise.AssertionError",this.message="AssertionError: "+e,this.stack=(new Error).stack}function l(e){this.name="BBMEnterprise.Error.InvalidEncodingError",this.message=e,this.stack=(new Error).stack}function h(e){this.name="BBMEnterprise.Error.ProtectionError",this.message="ProtectionError: "+e,this.stack=(new Error).stack}r.d(t,"b",function(){return n}),t.a=y,t.c=l,n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,o.prototype=Object.create(n.prototype),o.prototype.constructor=o,s.prototype=Object.create(n.prototype),s.prototype.constructor=s,c.prototype=Object.create(n.prototype),c.prototype.constructor=c,i.prototype=Object.create(n.prototype),i.prototype.constructor=i,a.prototype=Object.create(c.prototype),a.prototype.constructor=a,p.prototype=Object.create(c.prototype),p.prototype.constructor=p,u.prototype=Object.create(n.prototype),u.prototype.constructor=u,y.prototype=Object.create(n.prototype),y.prototype.constructor=y,l.prototype=Object.create(Error.prototype),l.prototype.constructor=l,h.prototype=Object.create(n.prototype),h.prototype.constructor=h},5:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64DecodeUint8Array=function(e){const t=Object(o.a)(e);let r;try{r=atob(e)}catch(e){throw new n.c(e.message)}const s=new Uint8Array(r.length);for(let e=0;e<r.length;e++)s[e]=r.charCodeAt(e);if(s.length!==t)throw new n.c("Invalid encoding");return s};var n=r(1),o=r(6)},6:function(e,t,r){"use strict";t.a=function(e){var t=e.length,r=0;if(0===t)return 0;if(t<2)throw new n.c("Invalid encoding");var o=3&t;if(0===o)for(var s=t,c=t-2;s>c&&"="===e[s-1];--s,++r);else{if(3===(r=4-o))throw new n.c("Invalid encoding");t+=r}return t/4*3-r};var n=r(1)},73:function(e,t,r){"use strict";const n=r(5),o=r(74);let s;try{s=window.crypto}catch(e){s=self.crypto}const c=e=>btoa(String.fromCharCode.apply(null,e)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),i=e=>n.base64DecodeUint8Array(e.replace(/-/g,"+").replace(/_/g,"/"));e.exports={digest:(e,t)=>{let r;switch(e){case o.DigestAlgorithm.SHA256:r={name:"SHA-256"};break;case o.DigestAlgorithm.SHA512:r={name:"SHA-512"};break;default:return Promise.reject(new Error("Unsupport digest algorithm: "+e))}return s.subtle.digest(r,t)},encrypt:(e,t,r)=>s.subtle.encrypt({name:"AES-CTR",counter:e,length:128},t,r).then(e=>new Uint8Array(e)),decrypt:(e,t,r)=>s.subtle.decrypt({name:"AES-CTR",counter:e,length:128},t,r).then(e=>new Uint8Array(e)),authEncrypt:(e,t,r)=>s.subtle.encrypt({name:"AES-GCM",iv:t,tagLength:128},r,e).then(e=>{const t=e.byteLength-16;return{content:new Uint8Array(e.slice(0,t)),tag:new Uint8Array(e.slice(t))}}),authDecrypt:(e,t,r)=>{const n=new Uint8Array(e.content.length+e.tag.length);return n.set(e.content),n.set(e.tag,e.content.length),s.subtle.decrypt({name:"AES-GCM",iv:t,tagLength:128},r,n).then(e=>new Uint8Array(e))},sign:(e,t)=>s.subtle.sign({name:"ECDSA",hash:{name:"SHA-512"}},e,t).then(e=>({r:new Uint8Array(e.slice(0,66)),s:new Uint8Array(e.slice(66))})),verify:(e,t,r)=>{let n=new Uint8Array(t.r.length+t.s.length);return n.set(t.r),n.set(t.s,t.r.length),s.subtle.verify({name:"ECDSA",hash:{name:"SHA-512"}},e,n,r)},deriveBits:(e,t)=>s.subtle.deriveBits({name:"ECDH",namedCurve:"P-521",public:e},t,528).then(e=>new Uint8Array(e)),generateAesKey:(e,t,r)=>s.subtle.generateKey({name:e,length:256},t,r),generateEcKey:(e,t,r)=>s.subtle.generateKey({name:r?"ECDSA":"ECDH",namedCurve:"P-521"},e,t),exportAesKey:e=>s.subtle.exportKey("raw",e).then(e=>new Uint8Array(e)),exportEcPublicKey:e=>s.subtle.exportKey("jwk",e).then(e=>{const t=i(e.x),r=i(e.y);let n=new Uint8Array(1+t.length+r.length);return n[0]=4,n.set(t,1),n.set(r,1+t.length),n}),exportEcPrivateKey:e=>s.subtle.exportKey("jwk",e).then(e=>i(e.d)),importAesKey:(e,t,r,n)=>s.subtle.importKey("raw",e,{name:t},r,n),importPublicEcKey:(e,t,r,n)=>{const o=c(e.slice(1,67)),i=c(e.slice(67));return s.subtle.importKey("jwk",{kty:"EC",crv:"P-521",x:o,y:i},{name:n,namedCurve:"P-521"},t,r)},importPrivateEcKey:(e,t,r,n,o)=>{const i=c(t.slice(1,67)),a=c(t.slice(67)),p=c(e);return s.subtle.importKey("jwk",{kty:"EC",crv:"P-521",x:i,y:a,d:p},{name:o,namedCurve:"P-521"},r,n)},getRandomValues:e=>s.getRandomValues(e),DigestAlgorithm:o.DigestAlgorithm,KeyType:o.KeyType}},74:function(e,t,r){"use strict";e.exports={DigestAlgorithm:{SHA256:0,SHA512:1}}}});