//****************************************************************************
// Copyright 2018 BlackBerry.  All Rights Reserved.
//
// You must obtain a license from and pay any applicable license fees to
// BlackBerry before you may reproduce, modify or distribute this software, or
// any work that includes all or part of this software.
//


"use strict";

/**
 * The KeyProtectInterface defines the interface through which the KeyProvider
 * interacts with the KeyProtect implementation to encrypt keys prior to sending
 * them to external storage and decrypt them upon retrieval from storage.
 *
 * @interface KeyProtectInterface
 * @memberof support.protect.encryption
 */
export default function KeyProtectInterface() {}

// :: ------------------------------------------------------------------------
// :: Interface

/**
 * Protect a key prior to storage.
 *
 * @function protect
 * @memberof BBMEnterprise.KeyProtectInterface
 *
 * @param {Uint8Array} unprotectedKey
 *   The key to be protected.
 *
 * @returns {Promise<Object>}
 *   The promise will be resolved with an object which the key provider is
 *   capable of storing. It is recommended that the object contains only other
 *   objects or url-safe strings, as these are what the bundled key providers
 *   are capable of storing, but it may be anything if a custom key provider
 *   is used.
 *
 *   The promise may be rejected to indicate that keys cannot be protected.
 */

/**
 * @function unprotect
 * @memberof BBMEnterprise.KeyProtectInterface
 *
 * @param {Object} protectedKey
 *   An object of the form which is generated by protect. It may be of any
 *   structure, and need not be an object if the KeyProvider is capable of
 *   returning data which is not an object.
 *
 * @returns {Promise<Uint8Array>}
 *  The unprotected key. This must undo the effect of the protect function
 *  above.
 *
 *  The promise may be rejected to indicate that keys cannot be unprotected.
 */

/**
 * Generate any data necessary for the unprotection of keys. It must be of a
 * form which can be stored by the key provider. It is recommended that it
 * be in the form of an object containing only other objects or url-safe
 * strings, but this is not required if a custom key provider is used.
 *
 * @function generateManagementKeys
 * @memberof BBMEnterprise.KeyProtectInterface
 *
 * @returns {Promise<Object>}
 *   A promise of data necessary to be retrieved with the keys in order to
 *   unprotect them. This information should not be sufficient on its own to
 *   unprotect the keys, as this would allow someone with access to the external
 *   key storage to unprotect the keys, but it may be combined with data from
 *   another source (for example data stored on each endpoint) in order to
 *   unprotect the keys.
 *
 *  The promise may be rejected to indicate that the data cannot be generated.
 */

/**
 * This function is called when keys are retrieved from storage. It will be
 * passed the data produced by generateManagementKeys when the keys were
 * protected, which will be necessary to unprotect the retrieved keys.
 *
 * @function setManagementKeys
 * @memberof BBMEnterprise.KeyProtectInterface
 *
 * @param {Object} manangementKeys
 *   Auxilliary data stored with the keys, which is necessary to unprotect them.
 *
 * @returns {Promise}
 *   The promise that the management keys have been acknowledged. The value of
 *   the promise is not used.
 *
 *  The promise may be rejected to indicate that the data cannot be used. This
 *  will result in a key import failure.
 */

/**
 * This function retrieves the management keys generated by
 * generateManagementKeys in order to store the data alongside the keys in
 * external storage. This is done as a separate step from generating the keys
 * in order to enable operations which require re-storage of the keys, but not
 * generation of fresh keys, for example re-keying.
 *
 * @function getManagementKeys
 * @memberof BBMEnterprise.KeyProtectInterface
 *
 * @returns {Promise<Object>}
 *   The promise of data generated by generateManagementKeys. The promise may
 *   be rejected if the data cannot be retrieved. It will result in failure to
 *   save the keys. The promise may resolve to undefined to indicate that
 *   nothing needs to be stored for this protection scheme.
 */

//****************************************************************************
